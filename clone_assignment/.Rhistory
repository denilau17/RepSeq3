immune <- filter(annotation, group=="immune")
immune.df <- genes.log[row.names(genes.log) %in% immune$gene,]
heatmap(data.matrix(immune.df), Colv=NA, col=hmcol)
View(immune.df)
View(genes["MIR4632",])
View(genes["MIR4632,TNFRSF1B",])
View(genes["TNFRSF1B",])
annotation[,"gene"]
annotation["MIR4632","gene"]
annotation["MIR4632","gene"]
annotation["MIR4632",]
annotation[,"gene"]
annotation[1,"gene"]
annotation[1,"gene"] <- "TNFRSF1B"
immune <- filter(annotation, group=="immune")
immune.df <- genes.log[row.names(genes.log) %in% immune$gene,]
heatmap(data.matrix(immune.df), Colv=NA, col=hmcol)
unique(annotation$group)
metab <- filter(annotation, group=="metabolism")
metab.df <- genes.log[row.names(genes.log) %in% metab$gene,]
heatmap(data.matrix(metab.df), Colv=NA, col=hmcol)
signaling <- filter(annotation, group=="signaling")
signal.df <- genes.log[row.names(genes.log) %in% signaling$gene,]
heatmap(data.matrix(signal.df), Colv=NA, col=hmcol)
table(annotation$group)
metab <- filter(annotation, group=="metabolism", group=="metablism")
metab <- filter(annotation, group=="metabolism" | group=="metablism")
metab.df <- genes.log[row.names(genes.log) %in% metab$gene,]
heatmap(data.matrix(metab.df), Colv=NA, col=hmcol)
cell <- filter(annotation, group=="cell cycle")
cell <- filter(annotation, group=="cell cycle"|group=="cell function"|group=="cytoskeleton")
cell.df <- genes.log[row.names(genes.log) %in% cell$gene,]
heatmap(data.matrix(cell.df), Colv=NA, col=hmcol)
trans <- filter(annotation, group=="transcription")
trans.df <- genes.log[row.names(genes.log) %in% trans$gene,]
heatmap(data.matrix(trans.df), Colv=NA, col=hmcol)
cell <- filter(annotation, group=="cell cycle"|group=="cell function"|group=="cytoskeleton"|group=="ribosome")
cell.df <- genes.log[row.names(genes.log) %in% cell$gene,]
heatmap(data.matrix(cell.df), Colv=NA, col=hmcol)
other <- filter(annotation, group=="other"|group=="unknown"|group=="adhesion")
other.df <- genes.log[row.names(genes.log) %in% other$gene,]
heatmap(data.matrix(other.df), Colv=NA, col=hmcol)
heatmap(data.matrix(immune.df), Colv=NA, col=hmcol)
names(annotation)
trans <- filter(annotation, group=="transcription"|TF=="TF")
trans.df <- genes.log[row.names(genes.log) %in% trans$gene,]
heatmap(data.matrix(trans.df), Colv=NA, col=hmcol)
heatmap(data.matrix(immune.df), Colv=NA, col=hmcol)
heatmap(data.matrix(metab.df), Colv=NA, col=hmcol)
heatmap(data.matrix(signal.df), Colv=NA, col=hmcol)
heatmap(data.matrix(cell.df), Colv=NA, col=hmcol)
heatmap(data.matrix(trans.df), Colv=NA, col=hmcol)
heatmap(data.matrix(other.df), Colv=NA, col=hmcol)
filter(annotation, group=="immune", TF="TF")
filter(annotation, group=="immune", TF=="TF")
View(trans.df)
View(signal.df)
genes.order <- read.csv("~/Documents/CD21/HiSeq_052815/Cuffdiff_analysis/hc mem genes.csv")
head(genes.order)
genes.order <- read.csv("~/Documents/CD21/HiSeq_052815/Cuffdiff_analysis/hc mem genes.csv", header=F)
head(genes.order)
df.order <- genes.log[rev(as.vector(genes.order$V1)),]
hmcol <- colorRampPalette(c("blue", "red"), space="rgb")(100)
heatmap(data.matrix(df.order), Rowv=NA, col=hmcol)
heatmap(data.matrix(immune.df), Colv=NA, col=hmcol)
heatmap(data.matrix(metab.df), Colv=NA, col=hmcol)
heatmap(data.matrix(signal.df), Colv=NA, col=hmcol)
heatmap(data.matrix(cell.df), Colv=NA, col=hmcol)
heatmap(data.matrix(df.order), Rowv=NA, col=hmcol)
View(df.order)
heatmap(data.matrix(cell.df), Colv=NA, col=hmcol)
heatmap(data.matrix(cell.df), Colv=NA, col=hmcol)
heatmap(data.matrix(trans.df), Colv=NA, col=hmcol)
heatmap(data.matrix(signal.df), Colv=NA, col=hmcol)
View(immune.df)
genes.order <- read.csv("~/Documents/CD21/HiSeq_052815/Cuffdiff_analysis/hc mem genes.csv", header=F)
df.order <- genes.log[rev(as.vector(genes.order$V1)),]
hmcol <- colorRampPalette(c("blue", "red"), space="rgb")(100)
heatmap(data.matrix(df.order), Rowv=NA, col=hmcol)
View(df.order)
View(immune.df)
heatmap(data.matrix(immune.df), Colv=NA, col=hmcol)
View(df.order)
heatmap(data.matrix(df.order), Rowv=NA, col=hmcol)
heatmap(data.matrix(immune.df), Colv=NA, col=hmcol)
heatmap(data.matrix(metab.df), Colv=NA, col=hmcol)
heatmap(data.matrix(signal.df), Colv=NA, col=hmcol)
heatmap(data.matrix(cell.df), Colv=NA, col=hmcol)
heatmap(data.matrix(trans.df), Colv=NA, col=hmcol)
heatmap(data.matrix(other.df), Colv=NA, col=hmcol)
genes <- read.delim("~/Documents/CD21/HiSeq_052815/Cuffdiff_analysis/normexp/genes.fpkm_table")
sample <- c("gene","243.CD21+", "243.CD21-", "243.naive", "243.BND", "54.CD21+", "54.CD21-", "54.naive", "54.BND",
"221.BND", "221.naive", "221.CD21-", "221.CD21+", "225.BND", "225.naive", "225.CD21-", "225.CD21+")
genes <- as.data.frame(genes)
names(genes) <- sample
genes.log <- log2(genes[2:17]+1)
row.names(genes.log) <- genes$gene
test <- genes[2:17]
row.names(test)  <- genes$gene
View(genes.log)
View(genes)
galaxy <- read.delim("~/Documents/CD21/HiSeq_052815/Cuffdiff_analysis/Galaxy544-[Cuffdiff_on_data_479,_data_444,_and_others__gene_differential_expression_testing].tabular")
sig.genes <- subset(galaxy, galaxy$significant == "yes")
CD21.pos.CD21.neg <- sig.genes[sig.genes$sample_1 == "CD21+" & sig.genes$sample_2 == "CD21-",]
View(CD21.pos.CD21.neg)
?mean
mean.exp <- mean(CD21.pos.CD21.neg$value_1, CD21.pos.CD21.neg$value_2)
mean.exp <- CD21.pos.CD21.neg$value_1 + CD21.pos.CD21.neg$value_2
head(mean.exp)
mean.exp <- (CD21.pos.CD21.neg$value_1 + CD21.pos.CD21.neg$value_2)/2
head(mean.exp)
plot(mean.exp, CD21.pos.CD21.neg$log2.fold_change.)
plot(CD21.pos.CD21.neg$log2.fold_change., mean.exp)
genes <- read.delim("~/Documents/CD21/HiSeq_052815/Cuffdiff_analysis/normexp/genes.fpkm_table")
sample <- c("gene","243.CD21+", "243.CD21-", "243.naive", "243.BND", "54.CD21+", "54.CD21-", "54.naive", "54.BND",
"221.BND", "221.naive", "221.CD21-", "221.CD21+", "225.BND", "225.naive", "225.CD21-", "225.CD21+")
genes <- as.data.frame(genes)
names(genes) <- sample
genes <- log2(genes[2:17]+1)
View(genes)
View(genes)
genes <- read.delim("~/Documents/CD21/HiSeq_052815/Cuffdiff_analysis/normexp/genes.fpkm_table")
sample <- c("gene","243.CD21+", "243.CD21-", "243.naive", "243.BND", "54.CD21+", "54.CD21-", "54.naive", "54.BND",
"221.BND", "221.naive", "221.CD21-", "221.CD21+", "225.BND", "225.naive", "225.CD21-", "225.CD21+")
genes <- as.data.frame(genes)
names(genes) <- sample
genes.log <- log2(genes[2:17]+1)
row.names(genes.log) <- genes$gene
genes.sig <- genes[genes$gene %in% CD21.pos.CD21.neg$gene,]
sig.genes.log <- log2(genes.sig[2:17]+1)
row.names(sig.genes.log) <- genes.sig$gene
View(sig.genes.log)
library(dplyr)
test <- select(sig.genes.log, contains("CD21"))
View(test)
sig.genes.log <- select(sig.genes.log, contains("CD21"))
mean.exp <- rowMeans(sig.genes.log)
plot(CD21.pos.CD21.neg$log2.fold_change., mean.exp)
?rowMeans
mean.exp <- rowMeans(sig.genes.log, na.rm = T)
plot(CD21.pos.CD21.neg$log2.fold_change., mean.exp)
View(genes$gene)
CD21.pos.CD21.neg$gene %in% genes$gene
CD21.pos.CD21.neg$gene[CD21.pos.CD21.neg$gene %in% genes$gene]
CD21.pos.CD21.neg$gene[!(CD21.pos.CD21.neg$gene %in% genes$gene)]
sig.genes <- CD21.pos.CD21.neg$gene
sig.genes <- strsplit(sig.genes, "\\,")
sig.genes <- strsplit(sig.genes, ",")
?strsplit
sig.genes <- as.character(CD21.pos.CD21.neg$gene)
sig.genes <- strsplit(sig.genes, ",")
head(sig.genes)
sig.genes <- sapply(sig.genes, "[[", 1)
genes.sig <- genes[genes$gene %in% sig.genes,]
sig.genes.1 <- sapply(sig.genes, "[[", 1)
sig.genes <- as.character(CD21.pos.CD21.neg$gene)
sig.genes <- strsplit(sig.genes, ",")
sig.genes.1 <- sapply(sig.genes, "[[", 1)
sig.genes.2 <- sapply(sig.genes, "[[", 2)
sig.genes.2 <- sapply(sig.genes, "[", 2)
sig.genes.2
sig.genes.2 <- sig.genes.2[!is.na(sig.genes.2)]
names(genes)
genes.sig <- filter(genes, gene %in% sig.genes.1 | gene %in% sig.genes.2)
sig.genes.log <- log2(genes.sig[2:17]+1)
row.names(sig.genes.log) <- genes.sig$gene
#get just CD21+ and CD21lo columns
sig.genes.log <- select(sig.genes.log, contains("CD21"))
View(sig.genes.log)
mean.exp <- rowMeans(sig.genes.log, na.rm = T)
mean.exp$gene <- genes.sig$gene
View(mean.exp)
mean.exp <- rowMeans(sig.genes.log, na.rm = T)
mean.exp
mean.exp <- t(mean.exp)
mean.exp
mean.exp$gene <- genes.sig$gene
mean.exp
View(mean.exp)
mean.fpkm <- genes.sig$gene
head(mean.fpkm)
View(mean.fpkm)
mean.fpkm$fpkm <- rowMeans(sig.genes.log, na.rm = T)
View(mean.fpkm)
mean.fpkm <- genes.sig$gene
mean.fpkm$fpkm <- unlist(rowMeans(sig.genes.log, na.rm = T))
View(mean.fpkm)
temp <- data.frame(gene=genes.sig$gene, fpkm=rowMeans(sig.genes.log, na.rm=T))
View(temp)
mean.fpkm <- data.frame(gene=genes.sig$gene, fpkm=rowMeans(sig.genes.log, na.rm=T))
names(CD21.pos.CD21.neg)
fold.change <- select(CD21.pos.CD21.neg, gene, log2.fold_change.)
head(fold.change)
out <- inner_join(mean.fpkm, fold.change)
View(out)
plot(fold.change, mean.fpkm)
plot(out$fpkm, out$log2.fold_change.)
plot(out$log2.fold_change., out$fpkm)
plot(out$log2.fold_change., out$fpkm, pch=20)
plot(out$log2.fold_change., out$fpkm, pch=20, col=ifelse(x < 0, "brickred", "navy"))
plot(out$log2.fold_change., out$fpkm, pch=20, col=ifelse(out$log2.fold_change. < 0, "brickred", "navy"))
plot(out$log2.fold_change., out$fpkm, pch=20, col=ifelse(out$log2.fold_change. < 0, "firebrick", "navy"))
write.csv("~/Documents/CD21/HiSeq_052815/Cuffdiff_analysis/dotplot_data.csv")
write.csv(out, "~/Documents/CD21/HiSeq_052815/Cuffdiff_analysis/dotplot_data.csv")
blast <- read.delim("~/Documents/RepSeq2/IgC/ngs_test/ngs_out", header=FALSE)
View(blast)
names(blast) <- c("name", "isotype")
names(blast) <- c("name", "blast.isotype")
blast <- read.delim("~/Documents/RepSeq2/IgC/ngs_test/ngs_out", header=FALSE)
View(blast)
names(blast) <- c("name", "blast.isotype", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
blast <- read.delim("~/Documents/RepSeq2/IgC/ngs_test/ngs_out", header=FALSE)
View(blast)
blast <- read.delim("~/Documents/RepSeq2/IgC/ngs_test/ngs_out", header=FALSE)
names(blast) <- c("name", "blast.isotype", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
View(blast)
ngs_tab <- read.csv("~/Documents/RepSeq2/IgC/ngs_test/ngs_tab.csv")
View(ngs_tab)
rm(ngs_tab)
blast <- read.delim("~/Documents/RepSeq2/IgC/ngs_test/ngs_out", header=FALSE)
names(blast) <- c("Name", "blast.isotype", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
vgenes <- read.csv("~/Documents/RepSeq2/IgC/ngs_test/ngs_tab.csv")
names(vgenes)
library(dplyr)
vgenes <- select(vgenes, Name, Isotype)
View(vgenes)
View(vgenes)
unique(vgenes$Isotype)
unique(blast$blast.isotype)
names(vgenes) <- c("Name", "vgenes.isotype")
df <- left_join(blast, vgenes)
View(df)
blast <- read.delim("~/Documents/RepSeq2/IgC/ngs_test/ngs_out", header=FALSE)
names(blast) <- c("Name", "blast.isotype", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
blast <- select(blast, Name, blast.isotype)
vgenes <- read.csv("~/Documents/RepSeq2/IgC/ngs_test/ngs_tab.csv")
vgenes <- select(vgenes, Name, Isotype)
names(vgenes) <- c("Name", "vgenes.isotype")
df <- left_join(blast, vgenes)
View(df)
gsub("[[:digit:]]","","IgA2")
df$vgenes.isotype <- gsub("[[:digit:]]","",df$vgenes.isotype)
head(df)
head(df, n=20)
df$blast.isotype <- gsub("[[:digit:]]","",df$blast.isotype)
View(df)
df$same <- df$blast.isotype == df$vgenes.isotype
View(df)
table(df$same)
false <- filter(df, same==FALSE)
View(false)
blast.only <- filter(df, blast.isotype==NA)
blast.only <- filter(df, vgenes.isotype==NA)
View(df)
blast.only <- filter(df, is.na(vgenes.isotype))
table(blast.only$blast.isotype)
`1_Summary_011_d7_070712` <- read.delim("~/Documents/RepSeq2/IMGT_original_data/011_d7-PB/1_Summary_011_d7_070712.txt", header=FALSE)
View(`1_Summary_011_d7_070712`)
rm(1_Summary_011_d7_070712)
rm('1_Summary_011_d7_070712')
df <- read.delim("~/Documents/RepSeq2/IMGT_original_data/011_d7-PB/1_Summary_011_d7_070712.txt", header=FALSE)
df <- read.delim("~/Documents/RepSeq2/IMGT_original_data/011_d7-PB/1_Summary_011_d7_070712.txt")
length(unique(df$Sequence.ID))
View(df)
id.short <- strsplit(df$Sequence.ID, "_")
id.short <- strsplit(df$Sequence.ID, "\\_")
id.short <- strsplit(as.character(df$Sequence.ID), "_")
id.short <- sapply(id.short, "[[", 1)
head(id.short)
length(unique(id.short))
df2 <- read.delim("~/Documents/RepSeq2/IMGT_original_data/SFA-007-D7-PB/1_Summary_SFA-007-D7-PB_261012.txt")
View(df2)
length(unique(df2$Sequence.ID))
id.short <- strsplit(as.character(df2$Sequence.ID), "_")
id.short <- sapply(id.short, "[[", 1)
length(unique(id.short))
VIew(df2)
View(df2)
head(id.short)
head(df2$Sequence.ID)
library(dplyr)
strange <- filter(df2, grepl("007", Sequence.ID))
View(strange)
df3 <- read.delim("~/Documents/RepSeq2/IMGT_original_data/012-d7PB/1_Summary_012-d7PB-1_190413.txt")
length(unique(df3$Sequence.ID))
id.short <- strsplit(as.character(df3$Sequence.ID), "_")
id.short <- sapply(id.short, "[[", 1)
length(unique(id.short))
strange <- filter(df3, grepl("012", Sequence.ID))
View(strange)
id.short <- strsplit(as.character(df$Sequence.ID), "_")
id.short <- sapply(id.short, "[[", 1)
length(unique(id.short))
strange <- filter(df3, grepl("011", Sequence.ID))
View(strange)
df <- read.delim("~/Documents/RepSeq2/IMGT_original_data/011_d7-PB/1_Summary_UC011D7PB_111112.txt")
View(df)
strange <- filter(df2, grepl("007", Sequence.ID))
View(strange)
strange <- filter(df3, grepl("012", Sequence.ID))
View(strange)
setwd("~/Documents/RepSeq3/clone_assignment/")
clones.007 <- read.csv("IMGT_007_85.csv", header = F)
clones.011 <- read.csv("IMGT_011_85.csv", header = F)
clones.012 <- read.csv("IMGT_012_85.csv", header = F)
header <- c("productive", "VGENE", "JGENE", "DGENE", "CDR3.len", "JUNCTION", "Sequence", "CDR3.nt",
"CDR3.aa", "cell.type", "subject", "subgroup", "clone.num")
names(clones.007) <- header
names(clones.011) <- header
names(clones.012) <- header
library(dplyr)
clone <- clones.011
rm (clone)
clones <- clones.011
clones$cloneID <- paste0(clones$subgroup, clones$clone.num)
cd21 <- filter(clones, cell.type=="d14.lo")
cd21.clones <- subset(clones, clones$cloneID %in% cd21$cloneID)
df <- cd21.clones %>% group_by(cloneID) %>% summarise(num_cells=n_distinct(cell.type))
View(df)
library(tidyr)
names(cd21.clones)
df <- cd21.clones %>% group_by(cloneID, cell.type)
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n())
View(df)
View(df)
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n()) %>%
spread(cell.type, count)
View(df)
d90 <- nrow(filter(df, count==NA))
temp <- filter(df, count==NA)
temp <- filter(df, is.na(count)==T)
warnings()
View(temp)
View(df)
temp <- filter(df, is.na(d90.hi)==F)
View(temp)
d90 <- nrow(filter(df, is.na(d90.hi)==F))
d90
d90 <- nrow(filter(df, is.na(d90.hi)==F))/nrow(df)
d90
clones <- clones.012
clones$cloneID <- paste0(clones$subgroup, clones$clone.num)
cd21 <- filter(clones, cell.type=="d14.lo")
cd21.clones <- subset(clones, clones$cloneID %in% cd21$cloneID)
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n()) %>%
spread(cell.type, count)
d90 <- nrow(filter(df, is.na(d90.hi)==F))/nrow(df)
d90
clones <- clones.007
clones$cloneID <- paste0(clones$subgroup, clones$clone.num)
cd21 <- filter(clones, cell.type=="d14.lo")
cd21.clones <- subset(clones, clones$cloneID %in% cd21$cloneID)
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n()) %>%
spread(cell.type, count)
d90 <- nrow(filter(df, is.na(d90.hi)==F))/nrow(df)
d90
View(df)
d90lo <- nrow(filter(df, is.na(d90.lo)==F))/nrow(df)
d90-d90lo
clones <- clones.012
clones$cloneID <- paste0(clones$subgroup, clones$clone.num)
cd21 <- filter(clones, cell.type=="d14.lo")
cd21.clones <- subset(clones, clones$cloneID %in% cd21$cloneID)
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n()) %>%
spread(cell.type, count)
View(df)
d90 <- nrow(filter(df, is.na(d90.hi)==F))/nrow(df)
d90lo <- nrow(filter(df, is.na(d90.lo)==F))/nrow(df)
clones <- clones.011
clones$cloneID <- paste0(clones$subgroup, clones$clone.num)
cd21 <- filter(clones, cell.type=="d14.lo")
cd21.clones <- subset(clones, clones$cloneID %in% cd21$cloneID)
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n()) %>%
spread(cell.type, count)
d90 <- nrow(filter(df, is.na(d90.hi)==F))/nrow(df)
d90lo <- nrow(filter(df, is.na(d90.lo)==F))/nrow(df)
d90.lo %in% names(df)
names(df)
"d90.lo"" %in% names(df)
)
""
"d90.lo" %in% names(df)
if !(d90.lo %in% names(df)){
print("jfdk")
}
!(d90.lo %in% names(df))
if !("d90.lo" %in% names(df)){
print("jfdk")
}
if !("d90.lo" %in% names(df)){
df$d90.lo <- NA
}
View(df)
if !("d90.lo" %in% names(df)){
df$d90.lo <- NA
}
if (!"d90.lo" %in% names(df)){
print("fndksl")
#df$d90.lo <- NA
}
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n()) %>%
spread(cell.type, count)
if (!"d90.lo" %in% names(df)){
print("fndksl")
#df$d90.lo <- NA
}
names(df)
if (!"d90.lo" %in% names(df)){
df$d90.lo <- NA
}
names(df)
d90 <- nrow(filter(df, is.na(d90.hi)==F))/nrow(df)
d90lo <- nrow(filter(df, is.na(d90.lo)==F))/nrow(df)
rm(clones)
get.percent <- function(clones){
clones$cloneID <- paste0(clones$subgroup, clones$clone.num)
#get cloneIDs for clones containing CD21lo cells
cd21 <- filter(clones, cell.type=="d14.lo")
cd21.clones <- subset(clones, clones$cloneID %in% cd21$cloneID)
#get the number of sequences from each cell type
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n()) %>%
spread(cell.type, count)
#if there are no D90 clones
if (!"d90.lo" %in% names(df)){
df$d90.lo <- NA
}
#get percent of clones that include a D90hi
d90 <- nrow(filter(df, is.na(d90.hi)==F))/nrow(df)
d90lo <- nrow(filter(df, is.na(d90.lo)==F))/nrow(df)
out <- c(d90, d90lo)
return(out)
}
percent.007 <- get.percent(clones.007)
percent.011 <- get.percent(clones.011)
percent.012 <- get.percent(clones.012)
percent.007
percent.011
percent.012
get.percent <- function(clones){
clones$cloneID <- paste0(clones$subgroup, clones$clone.num)
#get cloneIDs for clones containing CD21lo cells
cd21 <- filter(clones, cell.type=="d14.lo")
cd21.clones <- subset(clones, clones$cloneID %in% cd21$cloneID)
#get the number of sequences from each cell type
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n()) %>%
spread(cell.type, count)
#if there are no D90 clones
if (!"d90.lo" %in% names(df)){
df$d90.lo <- NA
}
#get percent of clones that include a D90hi
d90 <- nrow(filter(df, is.na(d90.hi)==F))/nrow(df)
d90lo <- nrow(filter(df, is.na(d90.lo)==F))/nrow(df)
d90both <-  nrow(filter(df, is.na(d90.lo==F), is.na(d90.hi)==F))/nrow(df)
out <- c(d90, d90lo, d90both)
return(out)
}
percent.007 <- get.percent(clones.007)
percent.011 <- get.percent(clones.011)
percent.012 <- get.percent(clones.012)
clones <- clones.011
clones$cloneID <- paste0(clones$subgroup, clones$clone.num)
#get cloneIDs for clones containing CD21lo cells
cd21 <- filter(clones, cell.type=="d14.lo")
cd21.clones <- subset(clones, clones$cloneID %in% cd21$cloneID)
#get the number of sequences from each cell type
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n()) %>%
spread(cell.type, count)
#if there are no D90 clones
if (!"d90.lo" %in% names(df)){
df$d90.lo <- NA
}
d90 <- nrow(filter(df, is.na(d90.hi)==F))/nrow(df)
d90lo <- nrow(filter(df, is.na(d90.lo)==F))/nrow(df)
temp <- filter(df, is.na(d90.hi))
View(temp)
temp <- filter(df, is.na(d90.hi)==F)
View(temp)
temp2 <- filter(temp, is.na(d90.lo)==F)
d90both <-  nrow(filter(df, is.na(d90.lo==F) & is.na(d90.hi)==F))/nrow(df)
d90lo <- nrow(filter(df, is.na(d90.lo)==F))/nrow(df)
d90both <-  nrow(filter(df, is.na(d90.lo==F))/nrow(df)
d90both <-  nrow(filter(df, is.na(d90.lo==F))/nrow(df)
d90both <-  nrow(filter(df, is.na(d90.lo==F))/nrow(df))
d90both <-  nrow(filter(df, is.na(d90.lo==F)))/nrow(df)
d90both <- nrow(filter(df, is.na(d90.lo)==F))/nrow(df)
d90both <- nrow(filter(df, is.na(d90.lo)==F, is.na(d90.hi)==F))/nrow(df)
d90both <- nrow(filter(df, is.na(d90.lo)==F, is.na(d90.hi)==T))/nrow(df)
d90both <- nrow(filter(df, is.na(d90.lo)==T, is.na(d90.hi)==F))/nrow(df)
rm(clones)
get.percent <- function(clones){
clones$cloneID <- paste0(clones$subgroup, clones$clone.num)
#get cloneIDs for clones containing CD21lo cells
cd21 <- filter(clones, cell.type=="d14.lo")
cd21.clones <- subset(clones, clones$cloneID %in% cd21$cloneID)
#get the number of sequences from each cell type
df <- cd21.clones %>% group_by(cloneID, cell.type) %>% mutate(count=n()) %>%
spread(cell.type, count)
#if there are no D90 clones
if (!"d90.lo" %in% names(df)){
df$d90.lo <- NA
}
#get percent of clones that include a D90hi
d90 <- nrow(filter(df, is.na(d90.hi)==F))/nrow(df)
d90lo <- nrow(filter(df, is.na(d90.lo)==F))/nrow(df)
d90both <- nrow(filter(df, is.na(d90.lo)==F, is.na(d90.hi)==F))/nrow(df)
out <- c(d90, d90lo, d90both)
return(out)
}
percent.007 <- get.percent(clones.007)
percent.011 <- get.percent(clones.011)
percent.012 <- get.percent(clones.012)
